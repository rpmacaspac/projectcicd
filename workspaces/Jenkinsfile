def dockerRegistry = 'https://registry.hub.docker.com'

pipeline {

  environment {
    dockerImageName = "rpmacaspac/projectcicd"
    dockerImage = ""
    projectDir = "workspaces/"
  }
agent {
        kubernetes {
            // Rather than inline YAML, in a multibranch Pipeline you could use: yamlFile 'jenkins-pod.yaml'
            // Or, to avoid YAML:
            // containerTemplate {
            //     name 'shell'
            //     image 'ubuntu'
            //     command 'sleep'
            //     args 'infinity'
            // }
            yaml '''
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: kaniko
    image: bitnami/kaniko:latest
    command:
    - sleep
    args:
    - infinity
'''
            // Can also wrap individual steps:
        //     container('shell') {
        //         sh 'hostname'
        //     }
        //     defaultContainer 'shell'
        // }
}    

  stages {

    stage('Checkout Source') {
      steps {
        git 'https://github.com/rpmacaspac/projectcicd.git'
      }
    }

    stage('Build image') {
      steps{
        container(kaniko){
          script {
              def dockerImageName = 'my-app:latest'
              def dockerFile = "${projectDir}/Dockerfile"
              dockerImage = docker.build(dockerImageName, "-f ${dockerFile} .")
          }
        }
      }
    }

    stage('Pushing Image') {
      environment {
               registryCredential = 'dockerhublogin'
           }
      steps{
        script {
          docker.withRegistry(${dockerRegistry} , registryCredential ) {
            dockerImage.push("latest")
          }
        }
      }
    }

    stage('Deploying App to Kubernetes') {
      steps {
        script {
          kubernetesDeploy(configs: "deploymentservice.yml", kubeconfigId: "kubernetes")
        }
      }
    }

  }

}
}