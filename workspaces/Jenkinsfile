def dockerRegistry = 'https://registry.hub.docker.com'

pipeline {

  environment {
    dockerImageName = "rpmacaspac/projectcicd"
    dockerImage = ""
    projectDir = "workspaces/"
  }

agent {
    kubernetes {
      yaml '''
        apiVersion: v1
        kind: Pod
        metadata:
          labels:
            some-label: kaniko
        spec:
          containers:
          - name: kaniko
            image: bitnami/kaniko:latest
            command:
            - cat
            tty: true
          - name: busybox
            image: busybox
            command:
            - cat
            tty: true
        '''
      retries 2
    }
  }
  stages {

    stage('Checkout Source') {
      steps {
        git 'https://github.com/rpmacaspac/projectcicd.git'
      }
    }

    stage('Build image') {
      steps{
        container('kaniko'){
          script {
              def dockerImageName = 'my-app:latest'
              def dockerFile = "${projectDir}/Dockerfile"
              dockerImage = docker.build(dockerImageName, "-f ${dockerFile} .")
          }
        }
      }
    }

    stage('Pushing Image') {
      environment {
               registryCredential = 'dockerhublogin'
           }
      steps{
        script {
          docker.withRegistry(${dockerRegistry} , registryCredential ) {
            dockerImage.push("latest")
          }
        }
      }
    }

    stage('Deploying App to Kubernetes') {
      steps {
        script {
          kubernetesDeploy(configs: "deploymentservice.yml", kubeconfigId: "kubernetes")
        }
      }
    }

  }

}
